version: '3.0'

# Configuration environment variables:
# - DATAFLOW_VERSION and SKIPPER_VERSION specify what DataFlow and Skipper image versions to use.
# - STREAM_APPS_URI and TASK_APPS_URI are used to specify what Stream and Task applications to pre-register.
# - HOST_MOUNT_PATH and DOCKER_MOUNT_PATH are used to set the host and docker mount folders.
#   If not set HOST_MOUNT_PATH defaults to the local host folder where the docker compose is being started.
#   If not set DOCKER_MOUNT_PATH defaults to /home/cnb/scdf on dataflow-server and skipper containers.
#   Example to mount the local Maven repository: HOST_MOUNT_PATH=~/.m2 DOCKER_MOUNT_PATH=/home/cnb/.m2  docker-compose up
# - APPS_PORT_RANGE allows you to override the port range exported by the Skipper server. By default the APPS_PORT_RANGE
#   must supersede the local deployer's PORTRANGE_LOW and PORTRANGE_HIGH - the ports assigned to the stream apps run inside the Skipper container.
#   The stream apps tha run in their own docker containers must set [DOCKER_PORTRANGE_LOW, DOCKER_PORTRANGE_HIGH] range that
#   doesn't overlap with the APPS_PORT_RANGE.
#
# Exposed container ports:
# - 9393:9393               - Data Flow server port (http://localhost:9393/dashboard)
# - 7577:7577               - Skipper server port (http://localhost:7577/api)
# - 20000-20105:20000-20105 - Port range for all deployed stream applications that run inside the Skipper container (e.g. maven:// registered apps).
#                             That means you can reach the application's actuator endpoints from your host machine.
#                             The deployed stream applications that run in their own docker containers (e.g. docker:// registered apps),
#                             can be reached on the ports they expose.
services:
  postgres:
    container_name: httt_postgres
    image: postgres:latest
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
    volumes:
      - /home/thanhnv/Code/20212/DA-HTTT/backend/docker/volume/postgres/data:/var/lib/postgresql/data
    network_mode: host
  #    ports:
#      - "5320:5432"
#    networks:
#      - httt
#    restart: unless-stopped

  backend:
    image: httt-backend:v1.0.1
    container_name: httt-backend
    expose:
      - 8082
#    ports:
#      - "8082:8082"
    network_mode: host
    depends_on:
      - postgres
#      - elasticsearch
#    networks:
#      - httt

#  elasticsearch:
#    container_name: httt-elasticsearch
#    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.2-amd64
#    volumes:
#      - /home/thanhnv/Code/20212/DA-HTTT/backend/docker/volume/elasticsearch/elasticsearch-7.15.2/data:/usr/share/elasticsearch/data
#    environment:
#      - xpack.security.enabled=false
#      - "discovery.type=single-node"
#      - bootstrap.memory_lock=true
#      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
#    networks:
#      - httt
#    ports:
#      - 9200:9200
#    network_mode: host

#
#networks:
#  default:
#    external:
#      name: host

#networks:
#  httt:
#    driver: bridge